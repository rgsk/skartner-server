// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id          String  @id @default(uuid())
  title       String
  body        String
  isPublished Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Posts")
}

enum GreWordStatus {
  STARTED_LEARNING
  STILL_LEARNING
  ALMOST_LEARNT
  FINISHED_LEARNING
  MEMORY_MODE
  MASTERED
}

model GreWord {
  id         String        @id @default(uuid())
  spelling   String
  status     GreWordStatus @default(STARTED_LEARNING)
  gptPrompts GptPrompt[]

  meta      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  greWordTags GreWordTag[]

  @@unique([spelling, userId])
  @@map("GreWords")
}

model GptPrompt {
  id             String  @id @default(uuid())
  input          String
  response       String
  editedResponse String?

  meta      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  greWord   GreWord? @relation(fields: [greWordId], references: [id])
  greWordId String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("GptPrompts")
}

model GreWordTag {
  id   String @id @default(uuid())
  name String @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String

  greWords GreWord[]

  meta      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("GreWordTags")
}

model User {
  id                        String                     @id @default(uuid())
  email                     String                     @unique
  greWordSearchPromptInputs GreWordSearchPromptInput[]

  meta      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  greWords     GreWord[]
  gptPrompts   GptPrompt[]
  greWordTags  GreWordTag[]
  userSessions UserSession[]

  @@map("Users")
}

model GreWordSearchPromptInput {
  id String @id @default(uuid())

  text   String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  meta      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("GreWordSearchPromptInputs")
}

model UserSession {
  id        String    @id @default(uuid())
  userId    String
  User      User      @relation(fields: [userId], references: [id])
  startedAt DateTime  @default(now())
  endedAt   DateTime?
  duration  Int?

  @@map("UserSessions")
}
