### This file was generated by Nexus Schema
### Do not make changes to this file directly


input EnumGreWordStatusFilter {
  equals: GreWordStatus
  in: [GreWordStatus!]
  not: GreWordStatus
  notIn: [GreWordStatus!]
}

type GptPrompt {
  createdAt: String!
  editedResponse: String
  greWord: GreWord
  greWordId: String
  id: String!
  input: String!
  meta: Json!
  response: String!
  updatedAt: String!
  user: User
  userId: String
}

type GreConfiguration {
  defaultGreWordSearchPromptInputs: [String!]!
}

type GreWord {
  createdAt: String!
  gptPrompts: [GptPrompt!]!
  greWordTag: GreWordTag
  greWordTagId: String
  id: String!
  meta: Json!
  spelling: String!
  status: GreWordStatus!
  updatedAt: String!
  user: User
  userId: String
}

type GreWordSearchPromptInput {
  createdAt: String!
  id: String!
  meta: Json!
  text: String!
  updatedAt: String!
  user: User!
  userId: String!
}

input GreWordSearchPromptInputWhereInput {
  id: StringFilter
  text: StringFilter
  userId: StringFilter
}

enum GreWordStatus {
  ALMOST_LEARNT
  FINISHED_LEARNING
  MASTERED
  MEMORY_MODE
  STARTED_LEARNING
  STILL_LEARNING
}

type GreWordTag {
  createdAt: String!
  greWords: [GreWord!]!
  id: String!
  meta: Json!
  name: String!
  updatedAt: String!
  user: User!
  userId: String!
}

input GreWordTagWhereInput {
  id: StringFilter
  name: StringFilter
  userId: StringFilter
}

input GreWordWhereInput {
  greWordTagId: StringFilter
  id: StringFilter
  spelling: StringFilter
  status: EnumGreWordStatusFilter
  userId: StringFilter
}

"""The `Json` scalar type represents JSON objects."""
scalar Json

type MetaFields {
  user: MetaFields_User!
}

type MetaFields_User {
  defaultGreWordSearchPromptInput: String!
  showDefaultGreWordSearchPromptInputs: String!
}

type Mutation {
  createDraft(body: String!, title: String!): Post
  createGreWord(greWordTagId: String, promptInput: String!, promptResponse: String!, spelling: String!, userId: String!): GreWord!
  createGreWordSearchPromptInput(text: String!, userId: String!): GreWordSearchPromptInput!
  createGreWordTag(name: String!, userId: String!): GreWordTag!
  createUser(email: String!, meta: Json): User
  deleteGptPrompt(id: String!): GptPrompt
  deleteGreWord(id: String!): GreWord
  deleteGreWordSearchPromptInput(id: String!): GreWordSearchPromptInput
  deleteGreWordTag(name: String!): GreWordTag!
  publish(draftId: String!): Post
  updateGptPrompt(editedResponse: String, id: String!): GptPrompt
  updateGreWordSearchPromptInput(id: String!, text: String!): GreWordSearchPromptInput
  updateUser(email: String, id: String, meta: Json): User
}

type Post {
  body: String
  createdAt: String!
  id: String!
  isPublished: Boolean
  title: String
  updatedAt: String!
}

type Query {
  allPosts(isPublished: Boolean!, token: String): [Post]
  drafts: [Post]
  gptPrompts(skip: Int, take: Int): [GptPrompt]
  greConfiguration: GreConfiguration!
  greWordSearchPromptInputs(skip: Int, take: Int, where: GreWordSearchPromptInputWhereInput): [GreWordSearchPromptInput!]!
  greWordTags(skip: Int, take: Int, where: GreWordTagWhereInput): [GreWordTag!]!
  greWords(skip: Int, take: Int, where: GreWordWhereInput): [GreWord!]!
  greWordsCount(where: GreWordWhereInput): Int!
  hello: helloWorld!
  metaFields: MetaFields!
  posts: [Post]
  sendSinglePrompt(input: String!): String
  users(skip: Int, take: Int, where: UserWhereInput): [User!]!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type User {
  createdAt: String!
  email: String!
  gptPrompts: [GptPrompt!]!
  greWordSearchPromptInputs: [GreWordSearchPromptInput!]!
  greWordTags: [GreWordTag!]!
  greWords: [GreWord!]!
  id: String!
  meta: Json!
  updatedAt: String!
}

input UserWhereInput {
  email: StringFilter
  id: StringFilter
}

type helloWorld {
  message: String!
}