/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./src/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CacheWordWhereInput: { // input type
    text?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  EnumGreWordStatusFilter: { // input type
    equals?: NexusGenEnums['GreWordStatus'] | null; // GreWordStatus
    in?: NexusGenEnums['GreWordStatus'][] | null; // [GreWordStatus!]
    not?: NexusGenEnums['GreWordStatus'] | null; // GreWordStatus
    notIn?: NexusGenEnums['GreWordStatus'][] | null; // [GreWordStatus!]
  }
  GreWordOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  GreWordSearchPromptInputWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    text?: NexusGenInputs['StringFilter'] | null; // StringFilter
    userId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  GreWordTagListRelationFilter: { // input type
    every?: NexusGenInputs['GreWordTagWhereInput'] | null; // GreWordTagWhereInput
    none?: NexusGenInputs['GreWordTagWhereInput'] | null; // GreWordTagWhereInput
    some?: NexusGenInputs['GreWordTagWhereInput'] | null; // GreWordTagWhereInput
  }
  GreWordTagNameUserIdCompoundUniqueInput: { // input type
    name: string; // String!
    userId: string; // String!
  }
  GreWordTagWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    userId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  GreWordTagWhereUniqueInput: { // input type
    id?: string | null; // String
    name_userId?: NexusGenInputs['GreWordTagNameUserIdCompoundUniqueInput'] | null; // GreWordTagNameUserIdCompoundUniqueInput
  }
  GreWordWhereInput: { // input type
    cacheWord?: NexusGenInputs['CacheWordWhereInput'] | null; // CacheWordWhereInput
    greWordTags?: NexusGenInputs['GreWordTagListRelationFilter'] | null; // GreWordTagListRelationFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    status?: NexusGenInputs['EnumGreWordStatusFilter'] | null; // EnumGreWordStatusFilter
    user?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  PermissionHierarchyOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  PermissionHierarchyUpdateInput: { // input type
    childPermissionId?: string | null; // String
    parentPermissionId?: string | null; // String
  }
  PermissionHierarchyWhereInput: { // input type
    childPermissionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    parentPermissionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  PermissionOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  PermissionUpdateInput: { // input type
    name?: string | null; // String
  }
  PermissionWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  RelationPermissionToRoleOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  RelationPermissionToRoleUpdateInput: { // input type
    granterId?: string | null; // String
    isAllowed?: boolean | null; // Boolean
    permissionId?: string | null; // String
    roleId?: string | null; // String
  }
  RelationPermissionToRoleWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    permissionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    roleId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  RelationPermissionToUserOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  RelationPermissionToUserUpdateInput: { // input type
    granterId?: string | null; // String
    isAllowed?: boolean | null; // Boolean
    permissionId?: string | null; // String
    userId?: string | null; // String
  }
  RelationPermissionToUserWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    permissionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  RelationRoleToUserUpdateInput: { // input type
    assignerId?: string | null; // String
    roleId?: string | null; // String
    userId?: string | null; // String
  }
  RelationRoleToUserWhereInput: { // input type
    assignerId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    roleId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    userId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  RoleOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  RoleUpdateInput: { // input type
    name?: string | null; // String
  }
  RoleWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  UserListRelationFilter: { // input type
    every?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    none?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    some?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
  }
  UserMetaParsedJsonValueInput: { // input type
    defaultGreWordSearchPromptInput?: string | null; // String
    showDefaultGreWordSearchPromptInputs?: boolean | null; // Boolean
  }
  UserOrderByWithRelationInput: { // input type
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    email?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  UserSessionMetaParsedJsonValueInput: { // input type
    none?: string | null; // String
  }
  UserSessionOrderByWithRelationInput: { // input type
    duration?: NexusGenEnums['SortOrder'] | null; // SortOrder
    endedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    startedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    user?: NexusGenInputs['UserOrderByWithRelationInput'] | null; // UserOrderByWithRelationInput
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  UserSessionWhereInput: { // input type
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    user?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  UserSessionWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  UserWhereInput: { // input type
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
}

export interface NexusGenEnums {
  GreWordStatus: "ALMOST_LEARNT" | "FINISHED_LEARNING" | "MASTERED" | "MEMORY_MODE" | "STARTED_LEARNING" | "STILL_LEARNING"
  QueryMode: "default" | "insensitive"
  SortOrder: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Json: any
}

export interface NexusGenObjects {
  AuthenticateResponse: { // root type
    message: string; // String!
  }
  BatchPayload: { // root type
    count: number; // Int!
  }
  CachePrompt: { // root type
    cacheResponses: NexusGenRootTypes['CacheResponse'][]; // [CacheResponse!]!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
  }
  CacheResponse: { // root type
    gptPrompts: NexusGenRootTypes['GptPrompt'][]; // [GptPrompt!]!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
  }
  CacheWord: { // root type
    cacheResponses: NexusGenRootTypes['CacheResponse'][]; // [CacheResponse!]!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
  }
  GenerateImagesForPromptResponse: { // root type
    imageUrls?: Array<string | null> | null; // [String]
  }
  GenerateImagesForWordResponse: { // root type
    imageUrls?: string[] | null; // [String!]
  }
  GptPrompt: { // root type
    editedResponse?: string | null; // String
    greWordId?: string | null; // String
    id: string; // String!
    imageUrls: string[]; // [String!]!
    meta: NexusGenScalars['Json']; // Json!
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  GreConfiguration: { // root type
    defaultGreWordSearchPromptInputs: string[]; // [String!]!
  }
  GreWord: { // root type
    greWordTags?: NexusGenRootTypes['GreWordTag'][] | null; // [GreWordTag!]
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    pronunciationAudioUrl?: string | null; // String
    status: NexusGenEnums['GreWordStatus']; // GreWordStatus!
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  GreWordSearchPromptInput: { // root type
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // String!
  }
  GreWordTag: { // root type
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    name: string; // String!
    userId: string; // String!
  }
  HelloWorld: { // root type
    message: string; // String!
  }
  Mutation: {};
  Notification: { // root type
    message: string; // String!
    userId: string; // String!
  }
  Permission: { // root type
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    name: string; // String!
    permissionHierarchyAsChild: NexusGenRootTypes['PermissionHierarchy'][]; // [PermissionHierarchy!]!
    permissionHierarchyAsParent: NexusGenRootTypes['PermissionHierarchy'][]; // [PermissionHierarchy!]!
    relationPermissionToRoleAsPermission: NexusGenRootTypes['RelationPermissionToRole'][]; // [RelationPermissionToRole!]!
    relationPermissionToUserAsPermission: NexusGenRootTypes['RelationPermissionToUser'][]; // [RelationPermissionToUser!]!
  }
  PermissionHierarchy: { // root type
    childPermission?: NexusGenRootTypes['Permission'] | null; // Permission
    childPermissionId: string; // String!
    id: string; // String!
    parentPermission?: NexusGenRootTypes['Permission'] | null; // Permission
    parentPermissionId: string; // String!
  }
  Post: { // root type
    body?: string | null; // String
    id: string; // String!
    isPublished?: boolean | null; // Boolean
    title?: string | null; // String
  }
  Query: {};
  RelationPermissionToRole: { // root type
    granter?: NexusGenRootTypes['User'] | null; // User
    granterId: string; // String!
    id: string; // String!
    isAllowed?: boolean | null; // Boolean
    permission?: NexusGenRootTypes['Permission'] | null; // Permission
    permissionId: string; // String!
    role?: NexusGenRootTypes['Role'] | null; // Role
    roleId: string; // String!
  }
  RelationPermissionToUser: { // root type
    granter?: NexusGenRootTypes['User'] | null; // User
    granterId: string; // String!
    id: string; // String!
    isAllowed?: boolean | null; // Boolean
    permission?: NexusGenRootTypes['Permission'] | null; // Permission
    permissionId: string; // String!
    user?: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  RelationRoleToUser: { // root type
    assigner?: NexusGenRootTypes['User'] | null; // User
    assignerId: string; // String!
    id: string; // String!
    role?: NexusGenRootTypes['Role'] | null; // Role
    roleId: string; // String!
    user?: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  Role: { // root type
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    name: string; // String!
    relationPermissionToRoleAsRole: NexusGenRootTypes['RelationPermissionToRole'][]; // [RelationPermissionToRole!]!
    relationRoleToUserAsRole: NexusGenRootTypes['RelationRoleToUser'][]; // [RelationRoleToUser!]!
  }
  SaveImageToS3Response: { // root type
    s3Url?: string | null; // String
  }
  SendSinglePromptResponse: { // root type
    cacheResponseId: string; // String!
    result: string; // String!
    resultIndex: number; // Int!
    totalResultsInCache: number; // Int!
  }
  Subscription: {};
  User: { // root type
    email: string; // String!
    id: string; // String!
  }
  UserMetaParsedJsonValue: { // root type
    defaultGreWordSearchPromptInput?: string | null; // String
    showDefaultGreWordSearchPromptInputs?: boolean | null; // Boolean
  }
  UserSession: { // root type
    duration?: number | null; // Int
    id: string; // String!
    userId: string; // String!
  }
  UserSessionMetaParsedJsonValue: { // root type
    none?: string | null; // String
  }
  WordAndResponses: { // root type
    responses: Array<string | null>; // [String]!
    word: string; // String!
  }
  WordsCountForGptPrompts: { // root type
    count: number; // Int!
    prompt: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AuthenticateResponse: { // field return type
    message: string; // String!
  }
  BatchPayload: { // field return type
    count: number; // Int!
  }
  CachePrompt: { // field return type
    cacheResponses: NexusGenRootTypes['CacheResponse'][]; // [CacheResponse!]!
    createdAt: string; // String!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
    updatedAt: string; // String!
  }
  CacheResponse: { // field return type
    cachePrompt: NexusGenRootTypes['CachePrompt']; // CachePrompt!
    cacheWord: NexusGenRootTypes['CacheWord']; // CacheWord!
    createdAt: string; // String!
    gptPrompts: NexusGenRootTypes['GptPrompt'][]; // [GptPrompt!]!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
    updatedAt: string; // String!
  }
  CacheWord: { // field return type
    cacheResponses: NexusGenRootTypes['CacheResponse'][]; // [CacheResponse!]!
    createdAt: string; // String!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    pronunciationAudioUrl: string | null; // String
    text: string; // String!
    updatedAt: string; // String!
  }
  GenerateImagesForPromptResponse: { // field return type
    imageUrls: Array<string | null> | null; // [String]
  }
  GenerateImagesForWordResponse: { // field return type
    imageUrls: string[] | null; // [String!]
  }
  GptPrompt: { // field return type
    cacheResponse: NexusGenRootTypes['CacheResponse']; // CacheResponse!
    createdAt: string; // String!
    editedResponse: string | null; // String
    greWord: NexusGenRootTypes['GreWord'] | null; // GreWord
    greWordId: string | null; // String
    id: string; // String!
    imageUrls: string[]; // [String!]!
    meta: NexusGenScalars['Json']; // Json!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  GreConfiguration: { // field return type
    defaultGreWordSearchPromptInputs: string[]; // [String!]!
  }
  GreWord: { // field return type
    cacheWord: NexusGenRootTypes['CacheWord']; // CacheWord!
    createdAt: string; // String!
    gptPrompts: NexusGenRootTypes['GptPrompt'][]; // [GptPrompt!]!
    greWordTags: NexusGenRootTypes['GreWordTag'][] | null; // [GreWordTag!]
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    pronunciationAudioUrl: string | null; // String
    status: NexusGenEnums['GreWordStatus']; // GreWordStatus!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  GreWordSearchPromptInput: { // field return type
    createdAt: string; // String!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    text: string; // String!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // String!
  }
  GreWordTag: { // field return type
    createdAt: string; // String!
    greWords: NexusGenRootTypes['GreWord'][]; // [GreWord!]!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    name: string; // String!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // String!
  }
  HelloWorld: { // field return type
    message: string; // String!
  }
  Mutation: { // field return type
    createDraft: NexusGenRootTypes['Post'] | null; // Post
    createGptPrompt: NexusGenRootTypes['GptPrompt']; // GptPrompt!
    createGreWord: NexusGenRootTypes['GreWord']; // GreWord!
    createGreWordSearchPromptInput: NexusGenRootTypes['GreWordSearchPromptInput']; // GreWordSearchPromptInput!
    createGreWordTag: NexusGenRootTypes['GreWordTag']; // GreWordTag!
    createNotification: NexusGenRootTypes['Notification']; // Notification!
    createPermission: NexusGenRootTypes['Permission']; // Permission!
    createPermissionHierarchy: NexusGenRootTypes['PermissionHierarchy']; // PermissionHierarchy!
    createRelationPermissionToRole: NexusGenRootTypes['RelationPermissionToRole']; // RelationPermissionToRole!
    createRelationPermissionToUser: NexusGenRootTypes['RelationPermissionToUser']; // RelationPermissionToUser!
    createRelationRoleToUser: NexusGenRootTypes['RelationRoleToUser']; // RelationRoleToUser!
    createRole: NexusGenRootTypes['Role']; // Role!
    createUser: NexusGenRootTypes['User']; // User!
    deleteGptPrompt: NexusGenRootTypes['GptPrompt'] | null; // GptPrompt
    deleteGreWord: NexusGenRootTypes['GreWord'] | null; // GreWord
    deleteGreWordSearchPromptInput: NexusGenRootTypes['GreWordSearchPromptInput'] | null; // GreWordSearchPromptInput
    deleteGreWordTag: NexusGenRootTypes['GreWordTag']; // GreWordTag!
    deletePermission: NexusGenRootTypes['Permission'] | null; // Permission
    deletePermissionHierarchies: NexusGenRootTypes['BatchPayload'] | null; // BatchPayload
    deletePermissionHierarchy: NexusGenRootTypes['PermissionHierarchy'] | null; // PermissionHierarchy
    deletePermissions: NexusGenRootTypes['BatchPayload'] | null; // BatchPayload
    deleteRelationPermissionToRole: NexusGenRootTypes['RelationPermissionToRole'] | null; // RelationPermissionToRole
    deleteRelationPermissionToUser: NexusGenRootTypes['RelationPermissionToUser'] | null; // RelationPermissionToUser
    deleteRelationRoleToUser: NexusGenRootTypes['RelationRoleToUser'] | null; // RelationRoleToUser
    deleteRelationsPermissionToRole: NexusGenRootTypes['BatchPayload'] | null; // BatchPayload
    deleteRelationsPermissionToUser: NexusGenRootTypes['BatchPayload'] | null; // BatchPayload
    deleteRelationsRoleToUser: NexusGenRootTypes['BatchPayload'] | null; // BatchPayload
    deleteRole: NexusGenRootTypes['Role'] | null; // Role
    deleteRoles: NexusGenRootTypes['BatchPayload'] | null; // BatchPayload
    publish: NexusGenRootTypes['Post'] | null; // Post
    saveImageToS3: NexusGenRootTypes['SaveImageToS3Response'] | null; // SaveImageToS3Response
    updateGptPrompt: NexusGenRootTypes['GptPrompt'] | null; // GptPrompt
    updateGreWord: NexusGenRootTypes['GreWord'] | null; // GreWord
    updateGreWordSearchPromptInput: NexusGenRootTypes['GreWordSearchPromptInput'] | null; // GreWordSearchPromptInput
    updatePermission: NexusGenRootTypes['Permission']; // Permission!
    updatePermissionHierarchy: NexusGenRootTypes['PermissionHierarchy'] | null; // PermissionHierarchy
    updateRelationPermissionToRole: NexusGenRootTypes['RelationPermissionToRole']; // RelationPermissionToRole!
    updateRelationPermissionToUser: NexusGenRootTypes['RelationPermissionToUser']; // RelationPermissionToUser!
    updateRelationRoleToUser: NexusGenRootTypes['RelationRoleToUser']; // RelationRoleToUser!
    updateRole: NexusGenRootTypes['Role']; // Role!
    updateUser: NexusGenRootTypes['User'] | null; // User
  }
  Notification: { // field return type
    message: string; // String!
    userId: string; // String!
  }
  Permission: { // field return type
    createdAt: string; // String!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    name: string; // String!
    permissionHierarchyAsChild: NexusGenRootTypes['PermissionHierarchy'][]; // [PermissionHierarchy!]!
    permissionHierarchyAsParent: NexusGenRootTypes['PermissionHierarchy'][]; // [PermissionHierarchy!]!
    relationPermissionToRoleAsPermission: NexusGenRootTypes['RelationPermissionToRole'][]; // [RelationPermissionToRole!]!
    relationPermissionToUserAsPermission: NexusGenRootTypes['RelationPermissionToUser'][]; // [RelationPermissionToUser!]!
    updatedAt: string; // String!
  }
  PermissionHierarchy: { // field return type
    childPermission: NexusGenRootTypes['Permission'] | null; // Permission
    childPermissionId: string; // String!
    createdAt: string; // String!
    id: string; // String!
    parentPermission: NexusGenRootTypes['Permission'] | null; // Permission
    parentPermissionId: string; // String!
  }
  Post: { // field return type
    body: string | null; // String
    createdAt: string; // String!
    id: string; // String!
    isPublished: boolean | null; // Boolean
    title: string | null; // String
    updatedAt: string; // String!
  }
  Query: { // field return type
    allPosts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    authenticate: NexusGenRootTypes['AuthenticateResponse']; // AuthenticateResponse!
    drafts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    generateImagesForPrompt: NexusGenRootTypes['GenerateImagesForPromptResponse'] | null; // GenerateImagesForPromptResponse
    generateImagesForWord: NexusGenRootTypes['GenerateImagesForWordResponse'] | null; // GenerateImagesForWordResponse
    gptPrompts: Array<NexusGenRootTypes['GptPrompt'] | null> | null; // [GptPrompt]
    greConfiguration: NexusGenRootTypes['GreConfiguration']; // GreConfiguration!
    greWord: NexusGenRootTypes['GreWord'] | null; // GreWord
    greWordSearchPromptInputs: NexusGenRootTypes['GreWordSearchPromptInput'][]; // [GreWordSearchPromptInput!]!
    greWordTags: NexusGenRootTypes['GreWordTag'][]; // [GreWordTag!]!
    greWords: NexusGenRootTypes['GreWord'][]; // [GreWord!]!
    greWordsCount: number; // Int!
    hello: NexusGenRootTypes['HelloWorld']; // HelloWorld!
    permission: NexusGenRootTypes['Permission'] | null; // Permission
    permissionHierarchies: NexusGenRootTypes['PermissionHierarchy'][]; // [PermissionHierarchy!]!
    permissionHierarchiesCount: number; // Int!
    permissionHierarchy: NexusGenRootTypes['PermissionHierarchy'] | null; // PermissionHierarchy
    permissions: NexusGenRootTypes['Permission'][]; // [Permission!]!
    permissionsCount: number; // Int!
    posts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    relationPermissionToRole: NexusGenRootTypes['RelationPermissionToRole'] | null; // RelationPermissionToRole
    relationPermissionToUser: NexusGenRootTypes['RelationPermissionToUser'] | null; // RelationPermissionToUser
    relationRoleToUser: NexusGenRootTypes['RelationRoleToUser'] | null; // RelationRoleToUser
    relationsPermissionToRole: NexusGenRootTypes['RelationPermissionToRole'][]; // [RelationPermissionToRole!]!
    relationsPermissionToRoleCount: number; // Int!
    relationsPermissionToUser: NexusGenRootTypes['RelationPermissionToUser'][]; // [RelationPermissionToUser!]!
    relationsPermissionToUserCount: number; // Int!
    relationsRoleToUser: NexusGenRootTypes['RelationRoleToUser'][]; // [RelationRoleToUser!]!
    role: NexusGenRootTypes['Role'] | null; // Role
    roles: NexusGenRootTypes['Role'][]; // [Role!]!
    rolesCount: number; // Int!
    sendSinglePrompt: NexusGenRootTypes['SendSinglePromptResponse']; // SendSinglePromptResponse!
    user: NexusGenRootTypes['User'] | null; // User
    userSession: NexusGenRootTypes['UserSession'] | null; // UserSession
    userSessions: NexusGenRootTypes['UserSession'][]; // [UserSession!]!
    userSessionsCount: number; // Int!
    users: NexusGenRootTypes['User'][]; // [User!]!
    usersCount: number; // Int!
    wordsAndResponsesForPrompt: NexusGenRootTypes['WordAndResponses'][]; // [WordAndResponses!]!
    wordsCountForGptPrompts: NexusGenRootTypes['WordsCountForGptPrompts'][]; // [WordsCountForGptPrompts!]!
  }
  RelationPermissionToRole: { // field return type
    grantedAt: string; // String!
    granter: NexusGenRootTypes['User'] | null; // User
    granterId: string; // String!
    id: string; // String!
    isAllowed: boolean | null; // Boolean
    permission: NexusGenRootTypes['Permission'] | null; // Permission
    permissionId: string; // String!
    role: NexusGenRootTypes['Role'] | null; // Role
    roleId: string; // String!
  }
  RelationPermissionToUser: { // field return type
    grantedAt: string; // String!
    granter: NexusGenRootTypes['User'] | null; // User
    granterId: string; // String!
    id: string; // String!
    isAllowed: boolean | null; // Boolean
    permission: NexusGenRootTypes['Permission'] | null; // Permission
    permissionId: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  RelationRoleToUser: { // field return type
    assignedAt: string; // String!
    assigner: NexusGenRootTypes['User'] | null; // User
    assignerId: string; // String!
    id: string; // String!
    role: NexusGenRootTypes['Role'] | null; // Role
    roleId: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  Role: { // field return type
    createdAt: string; // String!
    id: string; // String!
    meta: NexusGenScalars['Json']; // Json!
    name: string; // String!
    relationPermissionToRoleAsRole: NexusGenRootTypes['RelationPermissionToRole'][]; // [RelationPermissionToRole!]!
    relationRoleToUserAsRole: NexusGenRootTypes['RelationRoleToUser'][]; // [RelationRoleToUser!]!
    updatedAt: string; // String!
  }
  SaveImageToS3Response: { // field return type
    s3Url: string | null; // String
  }
  SendSinglePromptResponse: { // field return type
    cacheResponseId: string; // String!
    result: string; // String!
    resultIndex: number; // Int!
    totalResultsInCache: number; // Int!
  }
  Subscription: { // field return type
    notificationReceived: NexusGenRootTypes['Notification'] | null; // Notification
    truths: boolean | null; // Boolean
  }
  User: { // field return type
    createdAt: string; // String!
    email: string; // String!
    gptPrompts: NexusGenRootTypes['GptPrompt'][]; // [GptPrompt!]!
    greWordSearchPromptInputs: NexusGenRootTypes['GreWordSearchPromptInput'][]; // [GreWordSearchPromptInput!]!
    greWordTags: NexusGenRootTypes['GreWordTag'][]; // [GreWordTag!]!
    greWords: NexusGenRootTypes['GreWord'][]; // [GreWord!]!
    id: string; // String!
    meta: NexusGenRootTypes['UserMetaParsedJsonValue']; // UserMetaParsedJsonValue!
    updatedAt: string; // String!
  }
  UserMetaParsedJsonValue: { // field return type
    defaultGreWordSearchPromptInput: string | null; // String
    showDefaultGreWordSearchPromptInputs: boolean | null; // Boolean
  }
  UserSession: { // field return type
    duration: number | null; // Int
    endedAt: string | null; // String
    id: string; // String!
    meta: NexusGenRootTypes['UserSessionMetaParsedJsonValue']; // UserSessionMetaParsedJsonValue!
    startedAt: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: string; // String!
  }
  UserSessionMetaParsedJsonValue: { // field return type
    none: string | null; // String
  }
  WordAndResponses: { // field return type
    responses: Array<string | null>; // [String]!
    word: string; // String!
  }
  WordsCountForGptPrompts: { // field return type
    count: number; // Int!
    prompt: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  AuthenticateResponse: { // field return type name
    message: 'String'
  }
  BatchPayload: { // field return type name
    count: 'Int'
  }
  CachePrompt: { // field return type name
    cacheResponses: 'CacheResponse'
    createdAt: 'String'
    id: 'String'
    meta: 'Json'
    text: 'String'
    updatedAt: 'String'
  }
  CacheResponse: { // field return type name
    cachePrompt: 'CachePrompt'
    cacheWord: 'CacheWord'
    createdAt: 'String'
    gptPrompts: 'GptPrompt'
    id: 'String'
    meta: 'Json'
    text: 'String'
    updatedAt: 'String'
  }
  CacheWord: { // field return type name
    cacheResponses: 'CacheResponse'
    createdAt: 'String'
    id: 'String'
    meta: 'Json'
    pronunciationAudioUrl: 'String'
    text: 'String'
    updatedAt: 'String'
  }
  GenerateImagesForPromptResponse: { // field return type name
    imageUrls: 'String'
  }
  GenerateImagesForWordResponse: { // field return type name
    imageUrls: 'String'
  }
  GptPrompt: { // field return type name
    cacheResponse: 'CacheResponse'
    createdAt: 'String'
    editedResponse: 'String'
    greWord: 'GreWord'
    greWordId: 'String'
    id: 'String'
    imageUrls: 'String'
    meta: 'Json'
    updatedAt: 'String'
    user: 'User'
    userId: 'String'
  }
  GreConfiguration: { // field return type name
    defaultGreWordSearchPromptInputs: 'String'
  }
  GreWord: { // field return type name
    cacheWord: 'CacheWord'
    createdAt: 'String'
    gptPrompts: 'GptPrompt'
    greWordTags: 'GreWordTag'
    id: 'String'
    meta: 'Json'
    pronunciationAudioUrl: 'String'
    status: 'GreWordStatus'
    updatedAt: 'String'
    user: 'User'
    userId: 'String'
  }
  GreWordSearchPromptInput: { // field return type name
    createdAt: 'String'
    id: 'String'
    meta: 'Json'
    text: 'String'
    updatedAt: 'String'
    user: 'User'
    userId: 'String'
  }
  GreWordTag: { // field return type name
    createdAt: 'String'
    greWords: 'GreWord'
    id: 'String'
    meta: 'Json'
    name: 'String'
    updatedAt: 'String'
    user: 'User'
    userId: 'String'
  }
  HelloWorld: { // field return type name
    message: 'String'
  }
  Mutation: { // field return type name
    createDraft: 'Post'
    createGptPrompt: 'GptPrompt'
    createGreWord: 'GreWord'
    createGreWordSearchPromptInput: 'GreWordSearchPromptInput'
    createGreWordTag: 'GreWordTag'
    createNotification: 'Notification'
    createPermission: 'Permission'
    createPermissionHierarchy: 'PermissionHierarchy'
    createRelationPermissionToRole: 'RelationPermissionToRole'
    createRelationPermissionToUser: 'RelationPermissionToUser'
    createRelationRoleToUser: 'RelationRoleToUser'
    createRole: 'Role'
    createUser: 'User'
    deleteGptPrompt: 'GptPrompt'
    deleteGreWord: 'GreWord'
    deleteGreWordSearchPromptInput: 'GreWordSearchPromptInput'
    deleteGreWordTag: 'GreWordTag'
    deletePermission: 'Permission'
    deletePermissionHierarchies: 'BatchPayload'
    deletePermissionHierarchy: 'PermissionHierarchy'
    deletePermissions: 'BatchPayload'
    deleteRelationPermissionToRole: 'RelationPermissionToRole'
    deleteRelationPermissionToUser: 'RelationPermissionToUser'
    deleteRelationRoleToUser: 'RelationRoleToUser'
    deleteRelationsPermissionToRole: 'BatchPayload'
    deleteRelationsPermissionToUser: 'BatchPayload'
    deleteRelationsRoleToUser: 'BatchPayload'
    deleteRole: 'Role'
    deleteRoles: 'BatchPayload'
    publish: 'Post'
    saveImageToS3: 'SaveImageToS3Response'
    updateGptPrompt: 'GptPrompt'
    updateGreWord: 'GreWord'
    updateGreWordSearchPromptInput: 'GreWordSearchPromptInput'
    updatePermission: 'Permission'
    updatePermissionHierarchy: 'PermissionHierarchy'
    updateRelationPermissionToRole: 'RelationPermissionToRole'
    updateRelationPermissionToUser: 'RelationPermissionToUser'
    updateRelationRoleToUser: 'RelationRoleToUser'
    updateRole: 'Role'
    updateUser: 'User'
  }
  Notification: { // field return type name
    message: 'String'
    userId: 'String'
  }
  Permission: { // field return type name
    createdAt: 'String'
    id: 'String'
    meta: 'Json'
    name: 'String'
    permissionHierarchyAsChild: 'PermissionHierarchy'
    permissionHierarchyAsParent: 'PermissionHierarchy'
    relationPermissionToRoleAsPermission: 'RelationPermissionToRole'
    relationPermissionToUserAsPermission: 'RelationPermissionToUser'
    updatedAt: 'String'
  }
  PermissionHierarchy: { // field return type name
    childPermission: 'Permission'
    childPermissionId: 'String'
    createdAt: 'String'
    id: 'String'
    parentPermission: 'Permission'
    parentPermissionId: 'String'
  }
  Post: { // field return type name
    body: 'String'
    createdAt: 'String'
    id: 'String'
    isPublished: 'Boolean'
    title: 'String'
    updatedAt: 'String'
  }
  Query: { // field return type name
    allPosts: 'Post'
    authenticate: 'AuthenticateResponse'
    drafts: 'Post'
    generateImagesForPrompt: 'GenerateImagesForPromptResponse'
    generateImagesForWord: 'GenerateImagesForWordResponse'
    gptPrompts: 'GptPrompt'
    greConfiguration: 'GreConfiguration'
    greWord: 'GreWord'
    greWordSearchPromptInputs: 'GreWordSearchPromptInput'
    greWordTags: 'GreWordTag'
    greWords: 'GreWord'
    greWordsCount: 'Int'
    hello: 'HelloWorld'
    permission: 'Permission'
    permissionHierarchies: 'PermissionHierarchy'
    permissionHierarchiesCount: 'Int'
    permissionHierarchy: 'PermissionHierarchy'
    permissions: 'Permission'
    permissionsCount: 'Int'
    posts: 'Post'
    relationPermissionToRole: 'RelationPermissionToRole'
    relationPermissionToUser: 'RelationPermissionToUser'
    relationRoleToUser: 'RelationRoleToUser'
    relationsPermissionToRole: 'RelationPermissionToRole'
    relationsPermissionToRoleCount: 'Int'
    relationsPermissionToUser: 'RelationPermissionToUser'
    relationsPermissionToUserCount: 'Int'
    relationsRoleToUser: 'RelationRoleToUser'
    role: 'Role'
    roles: 'Role'
    rolesCount: 'Int'
    sendSinglePrompt: 'SendSinglePromptResponse'
    user: 'User'
    userSession: 'UserSession'
    userSessions: 'UserSession'
    userSessionsCount: 'Int'
    users: 'User'
    usersCount: 'Int'
    wordsAndResponsesForPrompt: 'WordAndResponses'
    wordsCountForGptPrompts: 'WordsCountForGptPrompts'
  }
  RelationPermissionToRole: { // field return type name
    grantedAt: 'String'
    granter: 'User'
    granterId: 'String'
    id: 'String'
    isAllowed: 'Boolean'
    permission: 'Permission'
    permissionId: 'String'
    role: 'Role'
    roleId: 'String'
  }
  RelationPermissionToUser: { // field return type name
    grantedAt: 'String'
    granter: 'User'
    granterId: 'String'
    id: 'String'
    isAllowed: 'Boolean'
    permission: 'Permission'
    permissionId: 'String'
    user: 'User'
    userId: 'String'
  }
  RelationRoleToUser: { // field return type name
    assignedAt: 'String'
    assigner: 'User'
    assignerId: 'String'
    id: 'String'
    role: 'Role'
    roleId: 'String'
    user: 'User'
    userId: 'String'
  }
  Role: { // field return type name
    createdAt: 'String'
    id: 'String'
    meta: 'Json'
    name: 'String'
    relationPermissionToRoleAsRole: 'RelationPermissionToRole'
    relationRoleToUserAsRole: 'RelationRoleToUser'
    updatedAt: 'String'
  }
  SaveImageToS3Response: { // field return type name
    s3Url: 'String'
  }
  SendSinglePromptResponse: { // field return type name
    cacheResponseId: 'String'
    result: 'String'
    resultIndex: 'Int'
    totalResultsInCache: 'Int'
  }
  Subscription: { // field return type name
    notificationReceived: 'Notification'
    truths: 'Boolean'
  }
  User: { // field return type name
    createdAt: 'String'
    email: 'String'
    gptPrompts: 'GptPrompt'
    greWordSearchPromptInputs: 'GreWordSearchPromptInput'
    greWordTags: 'GreWordTag'
    greWords: 'GreWord'
    id: 'String'
    meta: 'UserMetaParsedJsonValue'
    updatedAt: 'String'
  }
  UserMetaParsedJsonValue: { // field return type name
    defaultGreWordSearchPromptInput: 'String'
    showDefaultGreWordSearchPromptInputs: 'Boolean'
  }
  UserSession: { // field return type name
    duration: 'Int'
    endedAt: 'String'
    id: 'String'
    meta: 'UserSessionMetaParsedJsonValue'
    startedAt: 'String'
    user: 'User'
    userId: 'String'
  }
  UserSessionMetaParsedJsonValue: { // field return type name
    none: 'String'
  }
  WordAndResponses: { // field return type name
    responses: 'String'
    word: 'String'
  }
  WordsCountForGptPrompts: { // field return type name
    count: 'Int'
    prompt: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createDraft: { // args
      body: string; // String!
      title: string; // String!
    }
    createGptPrompt: { // args
      cacheResponseId: string; // String!
      greWordId: string; // String!
    }
    createGreWord: { // args
      cacheResponseId: string; // String!
      greWordTags?: Array<NexusGenInputs['GreWordTagWhereUniqueInput'] | null> | null; // [GreWordTagWhereUniqueInput]
      status?: NexusGenEnums['GreWordStatus'] | null; // GreWordStatus
      userId: string; // String!
    }
    createGreWordSearchPromptInput: { // args
      text: string; // String!
      userId: string; // String!
    }
    createGreWordTag: { // args
      name: string; // String!
      userId: string; // String!
    }
    createNotification: { // args
      message: string; // String!
      userId: string; // String!
    }
    createPermission: { // args
      name: string; // String!
    }
    createPermissionHierarchy: { // args
      childPermissionId: string; // String!
      parentPermissionId: string; // String!
    }
    createRelationPermissionToRole: { // args
      granterId: string; // String!
      isAllowed?: boolean | null; // Boolean
      permissionId: string; // String!
      roleId: string; // String!
    }
    createRelationPermissionToUser: { // args
      granterId: string; // String!
      isAllowed?: boolean | null; // Boolean
      permissionId: string; // String!
      userId: string; // String!
    }
    createRelationRoleToUser: { // args
      assignerId: string; // String!
      roleId: string; // String!
      userId: string; // String!
    }
    createRole: { // args
      name: string; // String!
    }
    createUser: { // args
      email: string; // String!
      meta?: NexusGenInputs['UserMetaParsedJsonValueInput'] | null; // UserMetaParsedJsonValueInput
    }
    deleteGptPrompt: { // args
      id: string; // String!
    }
    deleteGreWord: { // args
      id: string; // String!
    }
    deleteGreWordSearchPromptInput: { // args
      id: string; // String!
    }
    deleteGreWordTag: { // args
      name: string; // String!
      userId: string; // String!
    }
    deletePermission: { // args
      id: string; // String!
    }
    deletePermissionHierarchies: { // args
      ids: string[]; // [String!]!
    }
    deletePermissionHierarchy: { // args
      id: string; // String!
    }
    deletePermissions: { // args
      ids: string[]; // [String!]!
    }
    deleteRelationPermissionToRole: { // args
      id: string; // String!
    }
    deleteRelationPermissionToUser: { // args
      id: string; // String!
    }
    deleteRelationRoleToUser: { // args
      id: string; // String!
    }
    deleteRelationsPermissionToRole: { // args
      ids: string[]; // [String!]!
    }
    deleteRelationsPermissionToUser: { // args
      ids: string[]; // [String!]!
    }
    deleteRelationsRoleToUser: { // args
      ids: string[]; // [String!]!
    }
    deleteRole: { // args
      id: string; // String!
    }
    deleteRoles: { // args
      ids: string[]; // [String!]!
    }
    publish: { // args
      draftId: string; // String!
    }
    saveImageToS3: { // args
      imageUrl: string; // String!
      key?: string | null; // String
    }
    updateGptPrompt: { // args
      editedResponse?: string | null; // String
      id: string; // String!
      imageUrls?: string[] | null; // [String!]
    }
    updateGreWord: { // args
      greWordTags?: Array<NexusGenInputs['GreWordTagWhereUniqueInput'] | null> | null; // [GreWordTagWhereUniqueInput]
      id: string; // String!
      status?: NexusGenEnums['GreWordStatus'] | null; // GreWordStatus
    }
    updateGreWordSearchPromptInput: { // args
      id: string; // String!
      text?: string | null; // String
    }
    updatePermission: { // args
      data: NexusGenInputs['PermissionUpdateInput']; // PermissionUpdateInput!
      id: string; // String!
    }
    updatePermissionHierarchy: { // args
      data: NexusGenInputs['PermissionHierarchyUpdateInput']; // PermissionHierarchyUpdateInput!
      id: string; // String!
    }
    updateRelationPermissionToRole: { // args
      data: NexusGenInputs['RelationPermissionToRoleUpdateInput']; // RelationPermissionToRoleUpdateInput!
      id: string; // String!
    }
    updateRelationPermissionToUser: { // args
      data: NexusGenInputs['RelationPermissionToUserUpdateInput']; // RelationPermissionToUserUpdateInput!
      id: string; // String!
    }
    updateRelationRoleToUser: { // args
      data: NexusGenInputs['RelationRoleToUserUpdateInput']; // RelationRoleToUserUpdateInput!
      id: string; // String!
    }
    updateRole: { // args
      data: NexusGenInputs['RoleUpdateInput']; // RoleUpdateInput!
      id: string; // String!
    }
    updateUser: { // args
      email?: string | null; // String
      id?: string | null; // String
      meta?: NexusGenInputs['UserMetaParsedJsonValueInput'] | null; // UserMetaParsedJsonValueInput
    }
  }
  Query: {
    allPosts: { // args
      isPublished: boolean; // Boolean!
      token?: string | null; // String
    }
    generateImagesForPrompt: { // args
      prompt: string; // String!
    }
    generateImagesForWord: { // args
      word: string; // String!
    }
    gptPrompts: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    greWord: { // args
      where?: NexusGenInputs['GreWordWhereInput'] | null; // GreWordWhereInput
    }
    greWordSearchPromptInputs: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['GreWordSearchPromptInputWhereInput'] | null; // GreWordSearchPromptInputWhereInput
    }
    greWordTags: { // args
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['GreWordTagWhereInput'] | null; // GreWordTagWhereInput
    }
    greWords: { // args
      orderBy?: Array<NexusGenInputs['GreWordOrderByWithRelationInput'] | null> | null; // [GreWordOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['GreWordWhereInput'] | null; // GreWordWhereInput
    }
    greWordsCount: { // args
      where?: NexusGenInputs['GreWordWhereInput'] | null; // GreWordWhereInput
    }
    permission: { // args
      where?: NexusGenInputs['PermissionWhereInput'] | null; // PermissionWhereInput
    }
    permissionHierarchies: { // args
      orderBy?: Array<NexusGenInputs['PermissionHierarchyOrderByWithRelationInput'] | null> | null; // [PermissionHierarchyOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['PermissionHierarchyWhereInput'] | null; // PermissionHierarchyWhereInput
    }
    permissionHierarchiesCount: { // args
      where?: NexusGenInputs['PermissionHierarchyWhereInput'] | null; // PermissionHierarchyWhereInput
    }
    permissionHierarchy: { // args
      where?: NexusGenInputs['PermissionHierarchyWhereInput'] | null; // PermissionHierarchyWhereInput
    }
    permissions: { // args
      orderBy?: Array<NexusGenInputs['PermissionOrderByWithRelationInput'] | null> | null; // [PermissionOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['PermissionWhereInput'] | null; // PermissionWhereInput
    }
    permissionsCount: { // args
      where?: NexusGenInputs['PermissionWhereInput'] | null; // PermissionWhereInput
    }
    relationPermissionToRole: { // args
      where: NexusGenInputs['RelationPermissionToRoleWhereInput']; // RelationPermissionToRoleWhereInput!
    }
    relationPermissionToUser: { // args
      where: NexusGenInputs['RelationPermissionToUserWhereInput']; // RelationPermissionToUserWhereInput!
    }
    relationRoleToUser: { // args
      where: NexusGenInputs['RelationRoleToUserWhereInput']; // RelationRoleToUserWhereInput!
    }
    relationsPermissionToRole: { // args
      orderBy?: Array<NexusGenInputs['RelationPermissionToRoleOrderByWithRelationInput'] | null> | null; // [RelationPermissionToRoleOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['RelationPermissionToRoleWhereInput'] | null; // RelationPermissionToRoleWhereInput
    }
    relationsPermissionToRoleCount: { // args
      where?: NexusGenInputs['RelationPermissionToRoleWhereInput'] | null; // RelationPermissionToRoleWhereInput
    }
    relationsPermissionToUser: { // args
      orderBy?: Array<NexusGenInputs['RelationPermissionToUserOrderByWithRelationInput'] | null> | null; // [RelationPermissionToUserOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['RelationPermissionToUserWhereInput'] | null; // RelationPermissionToUserWhereInput
    }
    relationsPermissionToUserCount: { // args
      where?: NexusGenInputs['RelationPermissionToUserWhereInput'] | null; // RelationPermissionToUserWhereInput
    }
    role: { // args
      where?: NexusGenInputs['RoleWhereInput'] | null; // RoleWhereInput
    }
    roles: { // args
      orderBy?: Array<NexusGenInputs['RoleOrderByWithRelationInput'] | null> | null; // [RoleOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['RoleWhereInput'] | null; // RoleWhereInput
    }
    rolesCount: { // args
      where?: NexusGenInputs['RoleWhereInput'] | null; // RoleWhereInput
    }
    sendSinglePrompt: { // args
      indexesReturned?: number[] | null; // [Int!]
      prompt: string; // String!
      resultIndexFromCache?: number | null; // Int
      skipCache?: boolean | null; // Boolean
      word: string; // String!
    }
    user: { // args
      where: NexusGenInputs['UserWhereInput']; // UserWhereInput!
    }
    userSession: { // args
      where: NexusGenInputs['UserSessionWhereUniqueInput']; // UserSessionWhereUniqueInput!
    }
    userSessions: { // args
      orderBy?: Array<NexusGenInputs['UserSessionOrderByWithRelationInput'] | null> | null; // [UserSessionOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['UserSessionWhereInput'] | null; // UserSessionWhereInput
    }
    userSessionsCount: { // args
      where?: NexusGenInputs['UserSessionWhereInput'] | null; // UserSessionWhereInput
    }
    users: { // args
      orderBy?: Array<NexusGenInputs['UserOrderByWithRelationInput'] | null> | null; // [UserOrderByWithRelationInput]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
    usersCount: { // args
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
    wordsAndResponsesForPrompt: { // args
      prompt: string; // String!
    }
    wordsCountForGptPrompts: { // args
      prompts: string[]; // [String!]!
    }
  }
  Subscription: {
    notificationReceived: { // args
      token: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}